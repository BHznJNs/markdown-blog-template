import{h as a,f as t,K as n,s,e as i,o as r,ag as u}from"./core.js";var e=a();function o(a){var i=a.mainData,r=a.datas;r||(r={main:i},a.datasAttr={main:"data"}),a.datas=a.mainData=null,m(i,r,a),t(r,(function(s){t(i.TRANSFERABLE_METHODS,(function(t){s.wrapMethod(t,n(d,a))}))})),i.wrapMethod("cloneShallow",n(l,a)),t(i.CHANGABLE_METHODS,(function(t){i.wrapMethod(t,n(c,a))})),s(r[i.dataType]===i)}function d(a,t){if(e(s=this).mainData===s){var n=i({},e(this).datas);n[this.dataType]=t,m(t,n,a)}else p(t,this.dataType,e(this).mainData,a);var s;return t}function c(a,t){return a.struct&&a.struct.update(),t}function l(a,n){return t(e(n).datas,(function(t,s){t!==n&&p(t.cloneShallow(),s,n,a)})),n}function f(a){var t=e(this).mainData;return null==a||null==t?t:e(t).datas[a]}function h(){var a=e(this).mainData;return null==a?[{data:a}]:r(u(e(a).datas),(function(t){return{type:t,data:e(a).datas[t]}}))}function m(a,n,s){e(a).datas={},t(n,(function(t,n){p(t,n,a,s)}))}function p(a,t,n,s){e(n).datas[t]=a,e(a).mainData=n,a.dataType=t,s.struct&&(a[s.structAttr]=s.struct,s.struct[s.datasAttr[t]]=a),a.getLinkedData=f,a.getLinkedDataAll=h}export{o as l};
