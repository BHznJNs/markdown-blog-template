import{b as t,i as e}from"./core.js";var n={average:function(t){for(var e=0,n=0,a=0;a<t.length;a++)isNaN(t[a])||(e+=t[a],n++);return 0===n?NaN:e/n},sum:function(t){for(var e=0,n=0;n<t.length;n++)e+=t[n]||0;return e},max:function(t){for(var e=-1/0,n=0;n<t.length;n++)t[n]>e&&(e=t[n]);return isFinite(e)?e:NaN},min:function(t){for(var e=1/0,n=0;n<t.length;n++)t[n]<e&&(e=t[n]);return isFinite(e)?e:NaN},nearest:function(t){return t[0]}},a=function(t){return Math.round(t.length/2)};function i(i){return{seriesType:i,reset:function(i,r,o){var s=i.getData(),u=i.get("sampling"),f=i.coordinateSystem,m=s.count();if(m>10&&"cartesian2d"===f.type&&u){var c=f.getBaseAxis(),g=f.getOtherAxis(c),l=c.getExtent(),v=o.getDevicePixelRatio(),d=Math.abs(l[1]-l[0])*(v||1),h=Math.round(m/d);if(isFinite(h)&&h>1){"lttb"===u&&i.setData(s.lttbDownSample(s.mapDimension(g.dim),1/h));var p=void 0;t(u)?p=n[u]:e(u)&&(p=u),p&&i.setData(s.downSample(s.mapDimension(g.dim),1/h,p,a))}}}}}export{i as d};
